name: Generate md5 sums
on: [push]
jobs:
  Retrieve-Firmware:
    runs-on: ubuntu-latest
    steps:
      - name: Free up disk space for the CI
        if: false
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          remove-large-packages: 'true'
          remove-cached-tools: 'true'
          remove-swapfile: 'true'
          verbose: 'false'

      - name: 'Checkout Repo'
        uses: actions/checkout@v4

      - name: Get kconfig
        run: |
          wget https://nightly.link/mnixry/proton-bridge/workflows/build-multi-platform/master/build-windows-latest.zip
          unzip ./build-windows-latest.zip
          mkdir bridge-win
          cd bridge-win
          tar xf ../bridge_windows_e164ed2ebd.tgz
          cd -
          tree
          
        env:
          GH_TOKEN: ${{ secrets.PAT }}
      - name: Build Windows Installer MSI from exe file
        uses: AliceOh/CreateWindowsInstaller@1.0.0
        with:
          exefile: ${{ github.workspace }}/bridge-win/helloworld.exe
      - name: Build Executable with Nuitka
        if: false
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: git-credential-outlook
          # many more Nuitka options available, see action doc, but it's best
          # to use nuitka-project: options in your code, so e.g. you can make
          # a difference for macOS and create an app bundle there.
          mode: onefile
          nofollow-import-to: "PyQt6*"
          include-module: keyring.backends.Windows
          #macos-target-arch: x86_64
      - name: test binary
        if: false
        run: |
          chmod a+x ./Build/git-credential-outlook.bin
          file ./Build/git-credential-outlook.bin
          ./Build/git-credential-outlook.bin || true
      - name: Upload package artifact
        if: true
        uses: actions/upload-artifact@v4
        with:
          name: ISO
          path: ${{ github.workspace }}/git-protonmail_win64.zip
          #path: ${{ github.workspace }}/mint-xfce.iso
          #path: ${{ github.workspace }}/dist/*.exe
          #path: ${{ github.workspace }}/Build/*.exe
      - name: Release
        if: github.ref == 'refs/heads/LTS'
        uses: softprops/action-gh-release@v2
        with:
          #files: ${{ github.workspace }}/ISO/*.tar.gz
          #files: ${{ github.workspace }}/ISO/*.iso
          files: ${{ github.workspace }}/output/*
          tag_name: horizon
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
